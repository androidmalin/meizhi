apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        resConfigs "zh", "en"
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
    }

    signingConfigs {
        myConfig {
            storeFile file(STOREFILE)
            //noinspection GroovyAssignabilityCheck
            storePassword STOREPASSWORD
            //noinspection GroovyAssignabilityCheck
            keyAlias KEYALIAS
            //noinspection GroovyAssignabilityCheck
            keyPassword KEYPASSWORD
        }
    }
    buildTypes {
        debug {
            minifyEnabled false// 是否混淆
            shrinkResources false // 是否去除无效的资源文件

            // 优化Gradle编译速度，只能在Debug版本中使用，Release时一定不要使用
            // 禁用AAPT检查这一类的Task
            aaptOptions {
                cruncherEnabled = false
            }
            //禁止 Link Task
            //也可以通过命令 gradle build -x lint 禁止Lint Task
            //Task耗时的命令 gradle build -profile 生成的文件在这里，在浏览器中打开即可。bilibili/build/reports/profile/profile-xxxxxxx.html
            project.gradle.startParameter.excludedTaskNames.add('lint')
        }
        release {
            //noinspection GroovyAssignabilityCheck
            signingConfig signingConfigs.myConfig
            minifyEnabled true
            shrinkResources true // 是否去除无效的资源文件
            // proguard-android.txt 文件的位置 /sdk/tools/proguard/
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    //Java编译版本
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    //打包忽略掉第三方jar相同的文件
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/CERT.SF'
        exclude 'META-INF/CERT.RSA'
        exclude 'META-INF/MANIFEST.MF'
    }

    lintOptions {
        lintConfig file("lint.xml")
        abortOnError false
        warning 'InvalidPackage'
        disable 'InvalidPackage'
    }

}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    compile rootProject.ext.dependencies["appcompat-v7"]
    compile rootProject.ext.dependencies["cardview"]
    compile rootProject.ext.dependencies["recyclerview"]
    compile rootProject.ext.dependencies["design"]

    //Glide
    compile rootProject.ext.dependencies["glide"]
    compile rootProject.ext.dependencies["okhttp3-integration"]

    //RxJava
    compile rootProject.ext.dependencies["rxandroid"]
    compile rootProject.ext.dependencies["rxjava"]

    //Retrofit2
    compile rootProject.ext.dependencies["retrofit"]
    compile rootProject.ext.dependencies["converter-gson"]
    compile rootProject.ext.dependencies["adapter-rxjava"]

    //OkHttp
    compile rootProject.ext.dependencies["okhttp"]
    compile project(path: ':pvlibrary')

    compile rootProject.ext.dependencies["umeng"]
}
