apply plugin: 'com.android.application'
apply plugin: 'project-report'

apply plugin: 'io.fabric'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        resConfigs "zh"
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        flavorDimensions "versionCode"
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi-v7a'
        }
    }

    signingConfigs {
        myConfig {
            storeFile file(STOREFILE)
            //noinspection GroovyAssignabilityCheck
            storePassword STOREPASSWORD
            //noinspection GroovyAssignabilityCheck
            keyAlias KEYALIAS
            //noinspection GroovyAssignabilityCheck
            keyPassword KEYPASSWORD
        }
    }
    buildTypes {
        debug {
            //https://developer.android.com/studio/build/shrink-code.html#unused-alt-resources
            buildConfigField "boolean", "LOG_DEBUG", "true"
            minifyEnabled false// 不启用通过 ProGuard 实现的代码压缩,代码压缩会拖慢构建速度，避免在调试构建中使用
            shrinkResources false // 是否去除无效的资源文件
            zipAlignEnabled false
            // 优化Gradle编译速度，只能在Debug版本中使用，Release时一定不要使用
            // 禁用AAPT检查这一类的Task
            crunchPngs false
            //禁止 Link Task
            //也可以通过命令 gradle build -x lint 禁止Lint Task
            //Task耗时的命令 gradle build --profile 生成的文件在这里，在浏览器中打开即可。projectRootName/build/reports/profile/profile-xxxxxxx.html
            project.gradle.startParameter.excludedTaskNames.add('lint')
        }
        release {
            //https://developer.android.com/studio/build/shrink-code.html#unused-alt-resources
            buildConfigField "boolean", "LOG_DEBUG", "false"
            //noinspection GroovyAssignabilityCheck
            debuggable false
            zipAlignEnabled true
            signingConfig signingConfigs.myConfig
            minifyEnabled true //启用通过 ProGuard 实现的代码压缩
            shrinkResources true // 去除无效的资源文件
            // proguard-android.txt 文件的位置 /sdk/tools/proguard/
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    //Java编译版本
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    //打包忽略掉第三方jar相同的文件
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/CERT.SF'
        exclude 'META-INF/CERT.RSA'
        exclude 'META-INF/MANIFEST.MF'
    }

    lintOptions {
        lintConfig file("lint.xml")
        abortOnError false
        warning 'InvalidPackage'
        disable 'InvalidPackage'
    }

    //productFlavors领域，定义渠道名，使用manifestPlaceholders制定要替换渠道占位符的值。
    //增加productFlavors.all领域对所有的productFlavors进行遍历，并使用那么作为渠道名。这些name实际上就是xiaomi,BaiDu
    productFlavors {
        google {}
        kuApp {}
        xiaomi {
            minSdkVersion = rootProject.ext.android.minSdkVersionDebug
            versionCode = rootProject.ext.android.versionCodeDebug
            versionName = rootProject.ext.android.versionNameDebug
        }
        productFlavors.all { flavor ->
            flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
        }

    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation rootProject.ext.dependencies["roundedimageview"]
    implementation rootProject.ext.dependencies["appcompat-v7"]
    implementation rootProject.ext.dependencies["cardview"]
    implementation rootProject.ext.dependencies["recyclerview"]
    implementation rootProject.ext.dependencies["design"]
    implementation(rootProject.ext.dependencies["rxandroid"]) {
        exclude module: 'rxjava'
    }
    implementation rootProject.ext.dependencies["rxjava"]
    implementation(rootProject.ext.dependencies["retrofit"]) {
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
    }
    implementation(rootProject.ext.dependencies["converter-gson"]) {
        exclude module: 'gson'
    }
    implementation rootProject.ext.dependencies["gson"]
    implementation(rootProject.ext.dependencies["adapter-rxjava"]) {
        exclude module: 'rxjava'
    }
    implementation rootProject.ext.dependencies["okhttp"]
    implementation(rootProject.ext.dependencies["fresco"]) {
        exclude module: 'support-core-utils'
        exclude module: 'support-compat'
        exclude module: 'support-annotations'
    }
    implementation(rootProject.ext.dependencies["fresco:imagepipeline-okhttp3"]) {
        exclude module: 'support-core-utils'
        exclude module: 'support-compat'
        exclude module: 'support-annotations'
        exclude module: 'okhttp'
    }
    debugImplementation(rootProject.ext.dependencies["leakcanary-android"]) {
        exclude module: 'support-core-utils'
    }
    releaseImplementation rootProject.ext.dependencies["leakcanary-android-no-op"]
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.4@aar') {
        transitive = true
    }
}